plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

apply plugin: 'idea'

repositories {
    jcenter()
    maven {
        name = 'CottonMC'
        url = 'https://server.bbkr.space/artifactory/libs-release'
    }
    maven {
        url 'https://maven.shedaniel.me/'
    }
    maven {
        url 'https://maven.terraformersmc.com/'
    }
}

//sourceCompatibility = JavaVersion.VERSION_1_8
//targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
    // discord rpc
    implementation 'com.jagrosh:DiscordIPC:0.4'

    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // https://github.com/CottonMC/LibGui/releases
    modImplementation "io.github.cottonmc:LibGui:5.4.0+1.18.2"

	modImplementation "com.terraformersmc:modmenu:3.2.1"
	modImplementation "me.shedaniel.cloth:cloth-config-fabric:6.2.57"

    include "io.github.cottonmc:LibGui:5.4.0+1.18.2"
	include "me.shedaniel.cloth:cloth-config-fabric:6.2.57"

    // websocket TODO: clean this up
    implementation 'org.java-websocket:Java-WebSocket:1.5.2'
    modImplementation "javax.websocket:javax.websocket-api:1.1"
    modImplementation 'io.socket:socket.io-client:2.0.1'
    include "javax.websocket:javax.websocket-api:1.1"
    implementation 'io.socket:socket.io-client:2.0.1'
    include 'javax.websocket:javax.websocket-api:1.1'
    include 'org.java-websocket:Java-WebSocket:1.5.2'

}

javafx {
    modules = [ 'javafx.media' ]
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build"
// task if it is present. If you remove this task, sources will not be generated
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
    from {configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}